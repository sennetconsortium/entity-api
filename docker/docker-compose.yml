# Will use the hostname when talking between services on the same network
services:
  entity-api:
    hostname: entity-api
    container_name: entity-api
    # Map host machine port 3333 to container port 8080
    # Only root can listen on ports below 1024, we use higher-numbered ports
    # since nginx is running under non-root user hubmap
    ports:
      - "3333:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    init: true
    restart: always
    platform: linux/amd64
    volumes:
      # Mount the app config to container in order to keep it outside of the image
      - "../src/instance:/usr/src/app/src/instance"
      # Mount the logging to container
      - "../log:/usr/src/app/log"
      # Mount the schema yaml file
      - "../src/schema/provenance_schema.yaml:/usr/src/app/src/schema/provenance_schema.yaml"
      # Mount the dataset type hierarchy JSON file
      - "../src/dataset_type_hierarchy.json:/usr/src/app/src/dataset_type_hierarchy.json"
      # Mount conf.d on host machine to the nginx conf.d on container
      - "./entity-api/nginx/conf.d:/etc/nginx/conf.d"
    networks:
      - sennet_docker_network
    logging:
      driver: awslogs
      options:
        awslogs-region: us-east-1
        awslogs-group: entity-api-docker-logs
        awslogs-stream: ${LOG_STREAM}

networks:
  # This is the network created by gateway to enable communicaton between multiple docker-compose projects
  sennet_docker_network:
    external: true
